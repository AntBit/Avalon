#!/usr/bin/env python

import sys, serial
from struct import *

workid = 0
midstate = "6969696969696969696969696969696969696969696969696969696969696969"
merkle = "696969696969696969696969"

def kopen(dev='/dev/Klondike'):
	global ser
	try:
		return serial.Serial(dev, 115200, timeout=0.1)
	except serial.SerialException, e:
		print "Cannot connect to /dev/Klondike"
		sys.exit(1)

def sendcmd(cmd, data=""):
	global ser
	try:
		ser.write(cmd+"\0"+data)
	except serial.SerialException, e:
		ser = kopen()
		ser.write(cmd+"\0"+data)
	data = ser.read(16)
	if cmd in 'WASED':
		print "State:%c, ASICs:%u, Slaves:%u, WorkQ:%u, Current WorkID:%x, Temp:%u, Fan:%u, HashCount:%u, ErrCount:%u" % unpack("=cBBBBBBHH", data[2:])
	elif cmd == 'C':
		print "Clock:%d, Target Temp:%u, Critical Temp:%u, Target Fan: %u" % unpack("=HBBB", data[2:])
	elif cmd == 'I':
		print "Version:%x, Serial#:%x, ProductID: %s" % unpack("=BL8s", data[2:])
	else:
		print ' '.join(x.encode('hex') for x in data)

if __name__ == '__main__':
	
	ser = kopen()
	print ser.name
	sendcmd('I')

	while True: 
		cmd = raw_input("Cmds [WAISCE Q]: ").upper()
		if cmd == "":
			continue
		data = ""
		if cmd == 'Q':
			break
		elif cmd == 'C':
			clk = raw_input("Clock (or blank for query only): ")
			if clk != "":
				data = pack("=H", int(clk))
				data += pack("=B", int(raw_input("Target Temp: ")))
				data += pack("=B", int(raw_input("Critical Temp: ")))
				data += pack("=B", int(raw_input("Target Fan: ")))
			else:
				data = chr(0)
		elif cmd == 'E':
			data = raw_input("1 or 0: ")
		elif cmd in 'WA':
			workid = (workid+1) % 256
			data = chr(workid) + midstate.decode('hex') + merkle.decode('hex')
		
		sendcmd(cmd, data)

	ser.close()	
